---
const { frontmatter } = Astro.props;
import BaseLayout from "./BaseLayout.astro";
// console.log("frontmatter:", frontmatter);
// console.log("ÊñáÁ´†Êï∞Èáè:", allPosts.length);
// console.log("Ê†áÁ≠æÊï∞Èáè:", tags.length);
---

<BaseLayout pageTitle={frontmatter.title}>
    <article class="post-container">
        <!-- ÊñáÁ´†Â§¥ÈÉ®Âå∫Âüü -->
        <header class="post-header">
            <div class="post-meta">
                <time class="post-date" datetime={frontmatter.pubDate}>
                    <span class="date-icon">üìÖ</span>
                    {frontmatter.pubDate.toString().slice(0, 10)}
                </time>
                <div class="author-info">
                    <span class="author-icon">‚úçÔ∏è</span>
                    <span class="author-name">{frontmatter.author}</span>
                </div>
            </div>
            
            <p class="post-description">{frontmatter.description}</p>
            
            <!-- ÁâπËâ≤ÂõæÁâá -->
            <div class="featured-image">
                <img src={frontmatter.image.url} alt={frontmatter.image.alt} />
                <div class="image-overlay"></div>
            </div>
            
            <!-- Ê†áÁ≠æÂå∫Âüü -->
            <div class="tags-container">
                <h3 class="tags-title">üè∑Ô∏è Ê†áÁ≠æ</h3>
                <div class="tags">
                    {
                        frontmatter.tags.map((tag: String) => (
                            <a href={`/tags/${tag}`} class="tag">
                                <span class="tag-text">{tag}</span>
                                <span class="tag-hover">#{tag}</span>
                            </a>
                        ))
                    }
                </div>
            </div>
        </header>

        <!-- ÊñáÁ´†ÂÜÖÂÆπ -->
        <main class="post-content">
            <slot />
        </main>
    </article>
</BaseLayout>

<style>
    .post-container {
        max-width: 800px;
        margin: 0 auto;
        position: relative;
    }

    /* ÊñáÁ´†Â§¥ÈÉ®Ê†∑Âºè */
    .post-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        color: white;
        position: relative;
        overflow: hidden;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }

    .post-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.05"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        pointer-events: none;
    }

    .post-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .post-date, .author-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.9rem;
        background: rgba(255, 255, 255, 0.2);
        padding: 0.5rem 1rem;
        border-radius: 25px;
        backdrop-filter: blur(10px);
    }

    .post-description {
        font-size: 1.2rem;
        font-style: italic;
        margin-bottom: 2rem;
        text-align: center;
        font-weight: 300;
        line-height: 1.6;
    }

    /* ÁâπËâ≤ÂõæÁâáÊ†∑Âºè */
    .featured-image {
        position: relative;
        border-radius: 15px;
        overflow: hidden;
        margin-bottom: 2rem;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
        transform: perspective(1000px) rotateX(5deg);
        transition: transform 0.3s ease;
    }

    .featured-image:hover {
        transform: perspective(1000px) rotateX(0deg) scale(1.02);
    }

    .featured-image img {
        width: 100%;
        height: 300px;
        object-fit: cover;
        display: block;
        transition: transform 0.3s ease;
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(102, 126, 234, 0.3), rgba(118, 75, 162, 0.3));
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .featured-image:hover .image-overlay {
        opacity: 1;
    }

    /* Ê†áÁ≠æÂå∫ÂüüÊ†∑Âºè */
    .tags-container {
        position: relative;
    }

    .tags-title {
        margin: 0 0 1rem 0;
        font-size: 1rem;
        font-weight: 500;
        text-align: center;
    }

    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        justify-content: center;
    }

    .tag {
        position: relative;
        padding: 0.6rem 1.2rem;
        background: rgba(255, 255, 255, 0.2);
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 25px;
        color: white;
        text-decoration: none;
        font-size: 0.85rem;
        font-weight: 500;
        backdrop-filter: blur(10px);
        transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        overflow: hidden;
    }

    .tag:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        background: rgba(255, 255, 255, 0.3);
        border-color: white;
    }

    .tag-text, .tag-hover {
        transition: all 0.3s ease;
    }

    .tag-hover {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0);
        opacity: 0;
    }

    .tag:hover .tag-text {
        transform: scale(0);
        opacity: 0;
    }

    .tag:hover .tag-hover {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }

    /* ÊñáÁ´†ÂÜÖÂÆπÊ†∑Âºè */
    .post-content {
        background: white;
        border-radius: 20px;
        padding: 2.5rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        position: relative;
        z-index: 1;
    }

    .post-content::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, #667eea, #764ba2, #667eea);
        border-radius: 22px;
        z-index: -1;
        background-size: 200% 200%;
        animation: gradient-border 3s ease infinite;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .post-content:hover::before {
        opacity: 1;
    }

    @keyframes gradient-border {
        0%, 100% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
    }

    /* Ê∑±Ëâ≤Ê®°ÂºèÊîØÊåÅ */
    html.dark .post-content {
        background: #1e293b;
        color: #f1f5f9;
    }

    html.dark .featured-image {
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.6);
    }

    /* ÂìçÂ∫îÂºèËÆæËÆ° */
    @media (max-width: 768px) {
        .post-header {
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .post-meta {
            flex-direction: column;
            align-items: stretch;
            text-align: center;
        }

        .featured-image {
            transform: none;
        }

        .featured-image:hover {
            transform: scale(1.02);
        }

        .featured-image img {
            height: 200px;
        }

        .post-content {
            padding: 1.5rem;
        }

        .tags {
            justify-content: center;
        }
    }

    /* Âä®ÁîªÊïàÊûú */
    .post-container {
        animation: fadeInUp 0.6s ease-out;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* ÊªöÂä®Âä®Áîª */
    .post-content {
        animation: slideIn 0.8s ease-out 0.2s both;
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(50px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>