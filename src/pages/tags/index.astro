---
import BaseLayout from "../../layouts/BaseLayout.astro";

const pageTitle = "标签索引";
const allPosts = Object.values(
    import.meta.glob("../posts/*.md", { eager: true }),
);

// 统计每个标签的使用次数
const tagCount: { [key: string]: number } = {};
allPosts.forEach((post: any) => {
    if (post.frontmatter.tags) {
        post.frontmatter.tags.forEach((tag: string) => {
            tagCount[tag] = (tagCount[tag] || 0) + 1;
        });
    }
});

// 按使用次数排序的标签列表
const sortedTags = Object.entries(tagCount)
    .sort(([,a], [,b]) => b - a)
    .map(([tag, count]) => ({ tag, count }));

const totalTags = sortedTags.length;
const totalPosts = allPosts.length;
---

<BaseLayout pageTitle={pageTitle}>
    <div class="tags-container">
        <!-- 隐藏默认标题 -->
        <style>
            .page-header {
                display: none !important;
            }
        </style>
        
        <!-- 极简标题区 -->
        <header class="header">
            <div class="header-content">
                <h1 class="title">TAGS</h1>
                <div class="stats">
                    <span class="stat">{totalTags} tags</span>
                    <span class="divider">|</span>
                    <span class="stat">{totalPosts} posts</span>
                </div>
            </div>
        </header>

        <!-- 标签网格 -->
        <div class="tags-grid">
            {
                sortedTags.map(({ tag, count }) => {
                    // 计算标签权重用于视觉层次
                    const maxCount = Math.max(...sortedTags.map(t => t.count));
                    const weight = count / maxCount;
                    const intensity = Math.floor(weight * 4) + 1; // 1-5 级别
                    
                    return (
                        <a 
                            href={`/tags/${tag}`} 
                            class={`tag-card level-${intensity}`}
                            data-count={count}
                        >
                            <span class="tag-name">{tag}</span>
                            <span class="tag-count">{count}</span>
                        </a>
                    )
                })
            }
        </div>
    </div>
</BaseLayout>

<style>
    /* 容器布局 */
    .tags-container {
        min-height: 100vh;
        background: 
            radial-gradient(ellipse at top, rgba(16, 24, 39, 0.03) 0%, transparent 50%),
            linear-gradient(180deg, rgba(247, 250, 252, 0.8) 0%, rgba(241, 245, 249, 0.4) 100%);
        padding: 0;
        animation: containerFade 1.2s cubic-bezier(0.16, 1, 0.3, 1);
    }

    @keyframes containerFade {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    /* 极简标题区 */
    .header {
        padding: 8rem 2rem 6rem;
        text-align: center;
        position: relative;
    }

    .header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 1px;
        height: 4rem;
        background: linear-gradient(to bottom, transparent, rgba(15, 23, 42, 0.4), transparent);
        animation: lineGrow 1.5s cubic-bezier(0.16, 1, 0.3, 1) 0.5s both;
    }

    @keyframes lineGrow {
        from { height: 0; }
        to { height: 4rem; }
    }

    .header-content {
        max-width: 800px;
        margin: 0 auto;
    }

    .title {
        font-size: clamp(3rem, 8vw, 6rem);
        font-weight: 100;
        letter-spacing: 0.2em;
        color: #0f172a;
        margin: 0 0 2rem;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        position: relative;
        animation: titleSlide 1s cubic-bezier(0.16, 1, 0.3, 1) 0.3s both;
    }

    @keyframes titleSlide {
        from { 
            opacity: 0; 
            transform: translateY(30px) scale(0.95);
        }
        to { 
            opacity: 1; 
            transform: translateY(0) scale(1);
        }
    }

    .stats {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1.5rem;
        font-size: 0.9rem;
        font-weight: 400;
        letter-spacing: 0.05em;
        color: #64748b;
        text-transform: uppercase;
        animation: statsSlide 1s cubic-bezier(0.16, 1, 0.3, 1) 0.6s both;
    }

    @keyframes statsSlide {
        from { 
            opacity: 0; 
            transform: translateY(20px);
        }
        to { 
            opacity: 1; 
            transform: translateY(0);
        }
    }

    .stat {
        transition: color 0.3s ease;
    }

    .stat:hover {
        color: #1e293b;
    }

    .divider {
        opacity: 0.3;
        font-weight: 100;
    }

    /* 标签网格 */
    .tags-grid {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem 8rem;
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 1px;
        background: rgba(15, 23, 42, 0.08);
        border-radius: 2px;
        overflow: hidden;
        animation: gridFade 1.2s cubic-bezier(0.16, 1, 0.3, 1) 0.8s both;
    }

    @keyframes gridFade {
        from { 
            opacity: 0; 
            transform: translateY(40px) scale(0.98);
        }
        to { 
            opacity: 1; 
            transform: translateY(0) scale(1);
        }
    }

    /* 标签卡片 */
    .tag-card {
        background: #ffffff;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        aspect-ratio: 1;
        text-decoration: none;
        transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
        position: relative;
        overflow: hidden;
        border: none;
        cursor: pointer;
    }

    .tag-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: transparent;
        transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
        z-index: 1;
    }

    .tag-card:hover::before {
        background: rgba(15, 23, 42, 0.04);
    }

    .tag-card:hover {
        transform: translateY(-2px);
        box-shadow: 
            0 20px 25px -5px rgba(0, 0, 0, 0.1),
            0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    .tag-name {
        font-size: 0.95rem;
        font-weight: 500;
        color: #1e293b;
        margin-bottom: 0.5rem;
        text-align: center;
        position: relative;
        z-index: 2;
        transition: all 0.3s ease;
    }

    .tag-count {
        font-size: 0.75rem;
        font-weight: 600;
        color: #64748b;
        position: relative;
        z-index: 2;
        transition: all 0.3s ease;
        font-variant-numeric: tabular-nums;
    }

    /* 视觉层次 - 基于标签使用频率 */
    .tag-card.level-1 {
        background: #f8fafc;
    }

    .tag-card.level-1 .tag-name {
        color: #64748b;
        font-weight: 400;
    }

    .tag-card.level-2 {
        background: #f1f5f9;
    }

    .tag-card.level-2 .tag-name {
        color: #475569;
        font-weight: 450;
    }

    .tag-card.level-3 {
        background: #ffffff;
    }

    .tag-card.level-3 .tag-name {
        color: #334155;
        font-weight: 500;
    }

    .tag-card.level-4 {
        background: #ffffff;
        box-shadow: inset 0 0 0 1px rgba(15, 23, 42, 0.08);
    }

    .tag-card.level-4 .tag-name {
        color: #1e293b;
        font-weight: 600;
    }

    .tag-card.level-5 {
        background: #ffffff;
        box-shadow: inset 0 0 0 2px rgba(15, 23, 42, 0.12);
    }

    .tag-card.level-5 .tag-name {
        color: #0f172a;
        font-weight: 700;
        font-size: 1.05rem;
    }

    .tag-card.level-5 .tag-count {
        color: #1e293b;
        font-weight: 700;
    }

    /* 深色模式 */
    :global(.dark) .tags-container {
        background: 
            radial-gradient(ellipse at top, rgba(239, 246, 255, 0.05) 0%, transparent 50%),
            linear-gradient(180deg, rgba(15, 23, 42, 0.9) 0%, rgba(7, 15, 31, 0.95) 100%);
    }

    :global(.dark) .header::before {
        background: linear-gradient(to bottom, transparent, rgba(241, 245, 249, 0.2), transparent);
    }

    :global(.dark) .title {
        color: #f1f5f9;
    }

    :global(.dark) .stats {
        color: #94a3b8;
    }

    :global(.dark) .stat:hover {
        color: #e2e8f0;
    }

    :global(.dark) .tags-grid {
        background: rgba(241, 245, 249, 0.05);
    }

    :global(.dark) .tag-card {
        background: rgba(15, 23, 42, 0.6);
        backdrop-filter: blur(8px);
    }

    :global(.dark) .tag-card::before {
        background: transparent;
    }

    :global(.dark) .tag-card:hover::before {
        background: rgba(241, 245, 249, 0.03);
    }

    :global(.dark) .tag-name {
        color: #e2e8f0;
    }

    :global(.dark) .tag-count {
        color: #94a3b8;
    }

    :global(.dark) .tag-card.level-1 {
        background: rgba(15, 23, 42, 0.4);
    }

    :global(.dark) .tag-card.level-1 .tag-name {
        color: #94a3b8;
    }

    :global(.dark) .tag-card.level-2 {
        background: rgba(15, 23, 42, 0.5);
    }

    :global(.dark) .tag-card.level-2 .tag-name {
        color: #cbd5e1;
    }

    :global(.dark) .tag-card.level-3 {
        background: rgba(15, 23, 42, 0.6);
    }

    :global(.dark) .tag-card.level-4 {
        background: rgba(15, 23, 42, 0.7);
        box-shadow: inset 0 0 0 1px rgba(241, 245, 249, 0.1);
    }

    :global(.dark) .tag-card.level-5 {
        background: rgba(15, 23, 42, 0.8);
        box-shadow: inset 0 0 0 2px rgba(241, 245, 249, 0.15);
    }

    :global(.dark) .tag-card.level-5 .tag-name {
        color: #f8fafc;
    }

    :global(.dark) .tag-card.level-5 .tag-count {
        color: #e2e8f0;
    }

    /* 响应式设计 */
    @media (max-width: 768px) {
        .header {
            padding: 6rem 1rem 4rem;
        }

        .title {
            font-size: clamp(2rem, 10vw, 3.5rem);
            letter-spacing: 0.1em;
            margin-bottom: 1.5rem;
        }

        .stats {
            flex-direction: column;
            gap: 0.5rem;
            font-size: 0.8rem;
        }

        .divider {
            display: none;
        }

        .tags-grid {
            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
            padding: 0 1rem 6rem;
            gap: 1px;
        }

        .tag-name {
            font-size: 0.85rem;
        }

        .tag-count {
            font-size: 0.7rem;
        }
    }

    @media (max-width: 480px) {
        .tags-grid {
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        }
    }

    /* 性能优化 */
    .tag-card {
        will-change: transform;
    }

    @media (prefers-reduced-motion: reduce) {
        .tags-container,
        .header::before,
        .title,
        .stats,
        .tags-grid,
        .tag-card {
            animation: none;
        }
        
        .tag-card {
            transition: none;
        }
    }
</style>
