---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Greeting from "../../components/Greeting";

const pageTitle = "标签列表";
const allPosts = Object.values(
    import.meta.glob("../posts/*.md", { eager: true }),
);

// 统计每个标签的使用次数
const tagCount: { [key: string]: number } = {};
allPosts.forEach((post: any) => {
    if (post.frontmatter.tags) {
        post.frontmatter.tags.forEach((tag: string) => {
            tagCount[tag] = (tagCount[tag] || 0) + 1;
        });
    }
});

// 按使用次数排序的标签列表
const sortedTags = Object.entries(tagCount)
    .sort(([,a], [,b]) => b - a)
    .map(([tag, count]) => ({ tag, count }));

const totalTags = sortedTags.length;
const totalPosts = allPosts.length;
---

<BaseLayout pageTitle={pageTitle}>
    <div class="tags-page">
        <!-- 自定义页面头部，替换默认的 -->
        <style>
            .page-header {
                display: none !important;
            }
        </style>
        
        <!-- 自定义页面头部 -->
        <header class="custom-page-header">
            <p class="page-description">
                共有 <span class="highlight">{totalTags}</span> 个标签，涵盖 <span class="highlight">{totalPosts}</span> 篇文章
            </p>
        </header>

        <!-- 标签云容器 -->
        <div class="tags-cloud">
            {
                sortedTags.map(({ tag, count }) => {
                    // 根据使用次数计算标签大小
                    const maxCount = Math.max(...sortedTags.map(t => t.count));
                    const minCount = Math.min(...sortedTags.map(t => t.count));
                    const sizeRatio = (count - minCount) / (maxCount - minCount);
                    const fontSize = 0.9 + sizeRatio * 0.8; // 0.9rem 到 1.7rem
                    const opacity = 0.7 + sizeRatio * 0.3; // 70% 到 100% 透明度
                    
                    return (
                        <a 
                            href={`/tags/${tag}`} 
                            class="tag-item"
                            style={`font-size: ${fontSize}rem; opacity: ${opacity};`}
                            title={`${count} 篇文章`}
                        >
                            <span class="tag-text">{tag}</span>
                            <span class="tag-count">{count}</span>
                        </a>
                    )
                })
            }
        </div>

        <!-- 统计信息 -->
        <div class="stats-section">
            <h2 class="stats-title">标签统计</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-value">{totalTags}</div>
                    <div class="stat-label">总标签数</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">{Math.max(...sortedTags.map(t => t.count))}</div>
                    <div class="stat-label">最热标签</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">{(totalPosts / totalTags).toFixed(1)}</div>
                    <div class="stat-label">平均每标签</div>
                </div>
            </div>
        </div>

        <!-- 热门标签排行 -->
        <div class="popular-tags">
            <h2 class="section-title">热门标签</h2>
            <div class="popular-list">
                {
                    sortedTags.slice(0, 5).map(({ tag, count }, index) => (
                        <div class="popular-item">
                            <div class="rank">#{index + 1}</div>
                            <a href={`/tags/${tag}`} class="popular-tag">
                                {tag}
                            </a>
                            <div class="popular-count">{count} 篇</div>
                        </div>
                    ))
                }
            </div>
        </div>
    </div>
    
    <Greeting client:load message={["标签助手", "发现精彩内容", "探索更多话题", "找到你感兴趣的"]}/>
</BaseLayout>

<style>
    .tags-page {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
        animation: fadeInUp 0.6s ease-out;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* 自定义页面头部 */
    .custom-page-header {
        text-align: center;
        margin-bottom: 3rem;
        padding: 2rem 0;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 1rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .page-title {
        font-size: 3rem;
        font-weight: 700;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }

    .title-icon {
        font-size: 2.5rem;
        filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
    }

    .page-description {
        font-size: 1.1rem;
        color: var(--neutral-600);
        margin-top: 0.5rem;
    }

    .highlight {
        color: var(--primary-600);
        font-weight: 600;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* 标签云 */
    .tags-cloud {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1rem;
        margin-bottom: 4rem;
        padding: 2rem;
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        border-radius: 1rem;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .tag-item {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.6rem 1.2rem;
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 2rem;
        text-decoration: none;
        color: var(--neutral-700);
        font-weight: 500;
        transition: all 0.3s var(--ease-in-out-cubic);
        backdrop-filter: blur(10px);
        position: relative;
        overflow: hidden;
    }

    .tag-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .tag-item:hover::before {
        left: 100%;
    }

    .tag-item:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: var(--shadow-lg);
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
        border-color: var(--primary-400);
    }

    .tag-text {
        font-size: inherit;
        font-weight: inherit;
    }

    .tag-count {
        background: rgba(102, 126, 234, 0.2);
        color: var(--primary-700);
        padding: 0.2rem 0.5rem;
        border-radius: 1rem;
        font-size: 0.8rem;
        font-weight: 600;
        min-width: 1.5rem;
        text-align: center;
    }

    /* 统计信息 */
    .stats-section {
        margin-bottom: 4rem;
    }

    .stats-title {
        font-size: 2rem;
        font-weight: 600;
        text-align: center;
        margin-bottom: 2rem;
        color: var(--neutral-800);
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        max-width: 800px;
        margin: 0 auto;
    }

    .stat-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 1rem;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s var(--ease-in-out-cubic);
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-xl);
        background: rgba(255, 255, 255, 0.15);
    }

    .stat-value {
        font-size: 3rem;
        font-weight: 700;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        line-height: 1;
        margin-bottom: 0.5rem;
    }

    .stat-label {
        font-size: 1rem;
        color: var(--neutral-600);
        font-weight: 500;
    }

    /* 热门标签 */
    .popular-tags {
        margin-bottom: 3rem;
    }

    .section-title {
        font-size: 2rem;
        font-weight: 600;
        text-align: center;
        margin-bottom: 2rem;
        color: var(--neutral-800);
    }

    .popular-list {
        max-width: 600px;
        margin: 0 auto;
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .popular-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem 1.5rem;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 0.75rem;
        transition: all 0.3s var(--ease-in-out-cubic);
    }

    .popular-item:hover {
        transform: translateX(5px);
        background: rgba(255, 255, 255, 0.15);
        box-shadow: var(--shadow-md);
    }

    .rank {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        width: 2rem;
        height: 2rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 0.9rem;
        flex-shrink: 0;
    }

    .popular-tag {
        flex: 1;
        font-size: 1.1rem;
        font-weight: 500;
        color: var(--neutral-700);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .popular-tag:hover {
        color: var(--primary-600);
    }

    .popular-count {
        color: var(--neutral-500);
        font-size: 0.9rem;
        font-weight: 500;
        background: rgba(102, 126, 234, 0.1);
        padding: 0.3rem 0.8rem;
        border-radius: 1rem;
    }

    /* 深色模式适配 */
    :global(.dark) .page-description,
    :global(.dark) .stats-title,
    :global(.dark) .section-title {
        color: var(--neutral-200);
    }

    :global(.dark) .tag-item {
        color: var(--neutral-200);
        background: rgba(255, 255, 255, 0.05);
        border-color: rgba(255, 255, 255, 0.1);
    }

    :global(.dark) .tag-item:hover {
        background: rgba(102, 126, 234, 0.15);
        border-color: var(--primary-400);
    }

    :global(.dark) .popular-tag {
        color: var(--neutral-200);
    }

    :global(.dark) .stat-label {
        color: var(--neutral-400);
    }

    :global(.dark) .popular-count {
        color: var(--neutral-400);
        background: rgba(255, 255, 255, 0.1);
    }

    /* 响应式设计 */
    @media (max-width: 768px) {
        .tags-page {
            padding: 1rem;
        }

        .page-title {
            font-size: 2rem;
            flex-direction: column;
            gap: 0.5rem;
        }

        .title-icon {
            font-size: 2rem;
        }

        .tags-cloud {
            padding: 1rem;
            gap: 0.5rem;
        }

        .tag-item {
            font-size: 0.9rem;
            padding: 0.5rem 1rem;
        }

        .stats-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .stat-card {
            padding: 1.5rem;
        }

        .stat-value {
            font-size: 2rem;
        }

        .popular-item {
            padding: 1rem;
            gap: 0.75rem;
        }

        .rank {
            width: 1.5rem;
            height: 1.5rem;
            font-size: 0.8rem;
        }

        .popular-tag {
            font-size: 1rem;
        }
    }
</style>
