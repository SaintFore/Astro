---

---

<button id="themeToggle">
    <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <path
            class="sun"
            fill-rule="evenodd"
            d="M12 2v2m0 16v2M4.93 4.93l1.41 1.41m11.32 11.32l1.41 1.41M2 12h2m16 0h2M6.34 6.34L4.93 4.93m12.73 12.73l1.41 1.41M12 6a6 6 0 100 12 6 6 0 000-12z"
        ></path>
        <path
            class="moon"
            fill-rule="evenodd"
            d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
    </svg>
</button>

<style>
    #themeToggle {
        border: none;
        background: rgba(255, 255, 255, 0.1);
        padding: 0.8rem;
        border-radius: 50%;
        cursor: pointer;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
    }

    #themeToggle::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle, rgba(255, 255, 255, 0.2) 0%, transparent 70%);
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    #themeToggle:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: scale(1.1) rotate(10deg);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    #themeToggle:hover::before {
        opacity: 1;
    }

    #themeToggle svg {
        transition: all 0.3s ease;
    }

    #themeToggle:hover svg {
        transform: rotate(180deg);
    }

    .sun {
        fill: white;
        transition: all 0.3s ease;
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.5));
    }
    
    .moon {
        fill: transparent;
        transition: all 0.3s ease;
    }

    :global(.dark) #themeToggle {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    :global(.dark) .sun {
        fill: transparent;
    }
    
    :global(.dark) .moon {
        fill: white;
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.5));
    }
</style>

<script is:inline>
    const theme = (() => {
        const localStorageTheme = localStorage?.getItem("theme") ?? "";
        if (["dark", "light"].includes(localStorageTheme)) {
            return localStorageTheme;
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
        }
        return "light";
    })();

    if (theme === "dark") {
        document.documentElement.classList.add("dark");
    }else {
        document.documentElement.classList.remove("dark");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");

    }
    document.getElementById("themeToggle").addEventListener("click", handleToggleClick);

</script>
